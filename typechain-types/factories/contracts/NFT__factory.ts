/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFT, NFTInterface } from "../../contracts/NFT";
import { Signer } from "@ethersproject/abstract-signer";
const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "createToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601081526020016f4d657461766572736520546f6b656e7360801b815250604051806040016040528060048152602001631351551560e21b815250816000908162000069919062000128565b50600162000078828262000128565b505050620001f4565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ac57607f821691505b602082108103620000cd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000123576000816000526020600020601f850160051c81016020861015620000fe5750805b601f850160051c820191505b818110156200011f578281556001016200010a565b5050505b505050565b81516001600160401b0381111562000144576200014462000081565b6200015c8162000155845462000097565b84620000d3565b602080601f8311600181146200019457600084156200017b5750858301515b600019600386901b1c1916600185901b1785556200011f565b600085815260208120601f198616915b82811015620001c557888601518255948401946001909101908401620001a4565b5085821015620001e45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6115ca80620002046000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806301ffc9a7146100ca57806306fdde03146100f2578063081812fc14610107578063095ea7b31461013257806323b872dd1461014757806342842e0e1461015a57806345576f941461016d5780636352211e1461018e57806370a08231146101a157806378a89567146101b457806395d89b41146101bc578063a22cb465146101c4578063b88d4fde146101d7578063c87b56dd146101ea578063e985e9c5146101fd575b600080fd5b6100dd6100d8366004610f82565b610210565b60405190151581526020015b60405180910390f35b6100fa61023b565b6040516100e99190610fef565b61011a610115366004611002565b6102cd565b6040516001600160a01b0390911681526020016100e9565b610145610140366004611037565b6102f4565b005b610145610155366004611061565b61040e565b610145610168366004611061565b61043f565b61018061017b366004611128565b61045a565b6040519081526020016100e9565b61011a61019c366004611002565b61048b565b6101806101af366004611170565b6104bf565b610180610545565b6100fa610555565b6101456101d236600461118b565b610564565b6101456101e53660046111c7565b610573565b6100fa6101f8366004611002565b6105ab565b6100dd61020b366004611242565b6106bb565b60006001600160e01b03198216632483248360e11b14806102355750610235826106e9565b92915050565b60606000805461024a90611275565b80601f016020809104026020016040519081016040528092919081815260200182805461027690611275565b80156102c35780601f10610298576101008083540402835291602001916102c3565b820191906000526020600020905b8154815290600101906020018083116102a657829003601f168201915b5050505050905090565b60006102d882610739565b506000908152600460205260409020546001600160a01b031690565b60006102ff8261048b565b9050806001600160a01b0316836001600160a01b0316036103715760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061038d575061038d81336106bb565b6103ff5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610368565b6104098383610761565b505050565b61041833826107cf565b6104345760405162461bcd60e51b8152600401610368906112af565b61040983838361082d565b61040983838360405180602001604052806000815250610573565b600061046a600780546001019055565b600061047560075490565b90506104813382610991565b6102358184610a9e565b60008061049783610b5a565b90506001600160a01b0381166102355760405162461bcd60e51b8152600401610368906112fc565b60006001600160a01b0382166105295760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610368565b506001600160a01b031660009081526003602052604090205490565b600061055060075490565b905090565b60606001805461024a90611275565b61056f338383610b75565b5050565b61057d33836107cf565b6105995760405162461bcd60e51b8152600401610368906112af565b6105a584848484610c3f565b50505050565b60606105b682610739565b600082815260066020526040812080546105cf90611275565b80601f01602080910402602001604051908101604052809291908181526020018280546105fb90611275565b80156106485780601f1061061d57610100808354040283529160200191610648565b820191906000526020600020905b81548152906001019060200180831161062b57829003601f168201915b50505050509050600061066660408051602081019091526000815290565b90508051600003610678575092915050565b8151156106aa57808260405160200161069292919061132e565b60405160208183030381529060405292505050919050565b6106b384610c72565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061071a57506001600160e01b03198216635b5e139f60e01b145b8061023557506301ffc9a760e01b6001600160e01b0319831614610235565b61074281610ce6565b61075e5760405162461bcd60e51b8152600401610368906112fc565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107968261048b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806107db8361048b565b9050806001600160a01b0316846001600160a01b03161480610802575061080281856106bb565b806106b35750836001600160a01b031661081b846102cd565b6001600160a01b031614949350505050565b826001600160a01b03166108408261048b565b6001600160a01b0316146108665760405162461bcd60e51b81526004016103689061135d565b6001600160a01b0382166108c85760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610368565b826001600160a01b03166108db8261048b565b6001600160a01b0316146109015760405162461bcd60e51b81526004016103689061135d565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166109e75760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610368565b6109f081610ce6565b15610a0d5760405162461bcd60e51b8152600401610368906113a2565b610a1681610ce6565b15610a335760405162461bcd60e51b8152600401610368906113a2565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610aa782610ce6565b610b0a5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610368565b6000828152600660205260409020610b228282611429565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6000908152600260205260409020546001600160a01b031690565b816001600160a01b0316836001600160a01b031603610bd25760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610368565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c4a84848461082d565b610c5684848484610d03565b6105a55760405162461bcd60e51b8152600401610368906114e8565b6060610c7d82610739565b6000610c9460408051602081019091526000815290565b90506000815111610cb45760405180602001604052806000815250610cdf565b80610cbe84610e04565b604051602001610ccf92919061132e565b6040516020818303038152906040525b9392505050565b600080610cf283610b5a565b6001600160a01b0316141592915050565b60006001600160a01b0384163b15610df957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d4790339089908890889060040161153a565b6020604051808303816000875af1925050508015610d82575060408051601f3d908101601f19168201909252610d7f91810190611577565b60015b610ddf573d808015610db0576040519150601f19603f3d011682016040523d82523d6000602084013e610db5565b606091505b508051600003610dd75760405162461bcd60e51b8152600401610368906114e8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506106b3565b506001949350505050565b60606000610e1183610e96565b60010190506000816001600160401b03811115610e3057610e3061109d565b6040519080825280601f01601f191660200182016040528015610e5a576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e6457509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610ed55772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b8310610eff576904ee2d6d415b85acef8160201b830492506020015b662386f26fc100008310610f1d57662386f26fc10000830492506010015b6305f5e1008310610f35576305f5e100830492506008015b6127108310610f4957612710830492506004015b60648310610f5b576064830492506002015b600a83106102355760010192915050565b6001600160e01b03198116811461075e57600080fd5b600060208284031215610f9457600080fd5b8135610cdf81610f6c565b60005b83811015610fba578181015183820152602001610fa2565b50506000910152565b60008151808452610fdb816020860160208601610f9f565b601f01601f19169290920160200192915050565b602081526000610cdf6020830184610fc3565b60006020828403121561101457600080fd5b5035919050565b80356001600160a01b038116811461103257600080fd5b919050565b6000806040838503121561104a57600080fd5b6110538361101b565b946020939093013593505050565b60008060006060848603121561107657600080fd5b61107f8461101b565b925061108d6020850161101b565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b03808411156110cd576110cd61109d565b604051601f8501601f19908116603f011681019082821181831017156110f5576110f561109d565b8160405280935085815286868601111561110e57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561113a57600080fd5b81356001600160401b0381111561115057600080fd5b8201601f8101841361116157600080fd5b6106b3848235602084016110b3565b60006020828403121561118257600080fd5b610cdf8261101b565b6000806040838503121561119e57600080fd5b6111a78361101b565b9150602083013580151581146111bc57600080fd5b809150509250929050565b600080600080608085870312156111dd57600080fd5b6111e68561101b565b93506111f46020860161101b565b92506040850135915060608501356001600160401b0381111561121657600080fd5b8501601f8101871361122757600080fd5b611236878235602084016110b3565b91505092959194509250565b6000806040838503121561125557600080fd5b61125e8361101b565b915061126c6020840161101b565b90509250929050565b600181811c9082168061128957607f821691505b6020821081036112a957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b60008351611340818460208801610f9f565b835190830190611354818360208801610f9f565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b601f821115610409576000816000526020600020601f850160051c810160208610156114025750805b601f850160051c820191505b818110156114215782815560010161140e565b505050505050565b81516001600160401b038111156114425761144261109d565b611456816114508454611275565b846113d9565b602080601f83116001811461148b57600084156114735750858301515b600019600386901b1c1916600185901b178555611421565b600085815260208120601f198616915b828110156114ba5788860151825594840194600190910190840161149b565b50858210156114d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061156d90830184610fc3565b9695505050505050565b60006020828403121561158957600080fd5b8151610cdf81610f6c56fea264697066735822122044356e1ea295a26135db4938db05755a4f857e02078ea91c6e0228d55fae06da64736f6c63430008180033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFT> {
    return super.deploy(overrides || {}) as Promise<NFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  override connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
